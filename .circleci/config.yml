# TODO: Use YAML anchor for avoid duplicating of cache keys
version: 2.1

commands:
  setup_sbt:
    description: Get and install SBT
    parameters:
      sbt_version:
        type: string
        default: "1.3.9"
    steps:
      - restore_cache:
          keys:
          - sbt-{{ checksum "project/build.properties" }}

      - run:
          name: Setup SBT
          command: |
                    if [ ! -x ~/sbt/bin/sbt ]; then
                      cd ~/
                      curl --silent -L -o sbt.tgz https://piccolo.link/sbt-<< parameters.sbt_version >>.tgz
                      tar -xzvf sbt.tgz && rm -f sbt.tgz
                    fi

      - save_cache:
          paths:
            - ~/sbt
          key: sbt-{{ checksum "project/build.properties" }}

  build_n_tests:
    description: Build & Run tests
    steps:
      - restore_cache:
          keys:
          - scala-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.REACTIVEMONGO_SHADED }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

      - run:
          name: Build & Run tests
          command: |
                    export PATH=$PATH:~/sbt/bin
                    export USER=`basename $HOME`
                    
                    ./.ci_scripts/validate.sh

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.coursier/cache
            - ~/.sbt
          key: scala-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.REACTIVEMONGO_SHADED }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

  collect_test_reports:
    description: Collect test reports
    steps:
      - run:
          name: Collect test report
          command: |
                    mkdir test-reports
                    find . -path '*/test-reports/*' -name '*.xml' \
                      -print -exec cp {} test-reports \;
          when: always

  publish_snapshots:
    description: Publish artifacts to Snapshots repository
    parameters:
      release_suffix:
        type: string
        default: ""
      play_version:
        type: string
        default: ""
      scala_versions:
        type: string
        default: ""
    steps:
      - deploy:
          name: Publish artifacts to Sonatype Snapshots
          command: |
                    if [ ! "${CIRCLE_BRANCH}" = "master" ]; then
                      echo "Skipped on branch ${CIRCLE_BRANCH}"
                      exit 0
                    fi
                    
                    export PUBLISH_REPO_NAME="Sonatype Nexus Repository Manager"
                    export PUBLISH_REPO_ID="oss.sonatype.org"
                    export PUBLISH_REPO_URL="https://oss.sonatype.org/content/repositories/snapshots"
                    
                    if [ "x$PUBLISH_USER" = "x" -o "x$PUBLISH_PASS" = "x" ]; then
                      echo "Missing publication credentials"
                      exit 1
                    fi
                    
                    export RELEASE_SUFFIX="<< parameters.release_suffix >>"
                    export PLAY_VERSION="<< parameters.play_version >>"
                    
                    echo "Publishing artifacts for $PLAY_VERSION"
                    
                    if [ "x<< parameters.scala_versions >>" = "x" ]; then
                      sbt +publish
                    else
                      for V in `echo "<< parameters.scala_versions >>"`; do
                        sbt ++$V publish
                      done
                    fi

jobs:
  unit_play25:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      REACTIVEMONGO_SHADED: false
      RELEASE_SUFFIX: play25
      PLAY_VERSION: 2.5.11
      SCALA_VERSION: 2.11.12
    
    steps:
      - checkout
      - setup_sbt
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  unit_play26:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      REACTIVEMONGO_SHADED: false
      RELEASE_SUFFIX: play26
      PLAY_VERSION: 2.6.7
      SCALA_VERSION: 2.12.11
    
    steps:
      - checkout
      - setup_sbt
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  unit_play27:
    docker:
      - image: circleci/openjdk:9-jdk

    working_directory: ~/repo

    environment:
      REACTIVEMONGO_SHADED: false
      RELEASE_SUFFIX: play27
      PLAY_VERSION: 2.7.4
      SCALA_VERSION: 2.13.1
    
    steps:
      - checkout
      - setup_sbt
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  unit_play28:
    docker:
      - image: circleci/openjdk:9-jdk

    working_directory: ~/repo

    environment:
      REACTIVEMONGO_SHADED: false
      RELEASE_SUFFIX: play28
      PLAY_VERSION: 2.8.0
      SCALA_VERSION: 2.13.1
    
    steps:
      - checkout
      - setup_sbt
      - build_n_tests
      - collect_test_reports
      - store_test_results:
          path: test-reports

  publish_snapshots:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      - checkout
      - setup_sbt

      - restore_cache:
          keys:
          - scala-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.REACTIVEMONGO_SHADED }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

      - publish_snapshots:
          release_suffix: play25
          play_version: 2.5.7
          scala_versions: 2.11.12

      - publish_snapshots:
          release_suffix: play26
          play_version: 2.6.7
          scala_versions: 2.11.12 2.12.11

      - publish_snapshots:
          release_suffix: play27
          play_version: 2.7.4
          scala_versions: 2.11.12 2.12.11 2.13.1

      - publish_snapshots:
          release_suffix: play28
          play_version: 2.8.1
          scala_versions: 2.12.11 2.13.1

      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.coursier/cache
            - ~/.sbt
          key: scala-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.REACTIVEMONGO_SHADED }}-{{ checksum "build.sbt" }}-{{ checksum "project/Common.scala" }}

  trigger_dependent_builds:
    docker:
      - image: cimg/base:2020.01

    working_directory: ~/repo

    steps:
      - run:
          name: Trigger build @ Play-ReactiveMongo
          command: |
                    curl -X POST "https://circleci.com/api/v1.1/project/github/ReactiveMongo/Play-ReactiveMongo/build?circle-token=${PLAY_REACTIVEMONGO_API_TOKEN}"

workflows:
  version: 2

  main_suite:
    jobs:
      - unit_play25
      - unit_play26
      - unit_play27
      - unit_play28

      - publish_snapshots:
          filters:
            branches:
              only:
                - master
          requires:
            - unit_play25
            - unit_play26
            - unit_play27
            - unit_play28

      - trigger_dependent_builds:
          filters:
            branches:
              only:
                - master
          requires:
            - publish_snapshots
